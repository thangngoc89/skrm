{"version":3,"sources":["../node_modules/grommet/es6/components/Heading/StyledHeading.js","../node_modules/grommet/es6/components/Heading/Heading.js","../node_modules/date-fns/parse/index.js","../node_modules/bs-platform/lib/es6/belt_Option.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/date-fns/start_of_iso_week/index.js","../node_modules/date-fns/format/index.js","../node_modules/date-fns/is_date/index.js","../node_modules/date-fns/get_iso_year/index.js","../node_modules/date-fns/get_day_of_year/index.js","../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/start_of_year/index.js","../node_modules/date-fns/difference_in_calendar_days/index.js","../node_modules/date-fns/start_of_day/index.js","../node_modules/date-fns/get_iso_week/index.js","../node_modules/date-fns/start_of_week/index.js","../node_modules/date-fns/start_of_iso_year/index.js","../node_modules/date-fns/is_valid/index.js","../node_modules/date-fns/locale/en/index.js","../node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js","../node_modules/date-fns/locale/en/build_format_locale/index.js","../node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js"],"names":["TEXT_ALIGN_MAP","center","end","start","textAlignStyle","Object","styled_components_browser_esm","props","textAlign","colorStyle","colors","colorProp","theme","StyledHeading","h1","withConfig","displayName","componentId","utils_styles","font","heading","level","family","StyledHeading_fontFamily","size","headingTheme","levelStyle","data","styles","height","maxWidth","weight","responsive","responsiveBreakpoint","breakpoint","global","breakpoints","responsiveData","Math","min","push","mixins","console","warn","StyledHeading_sizeStyle","truncate","extend","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","defaultProps","setPrototypeOf","default_props","__webpack_require__","d","__webpack_exports__","HeadingWrapper","Heading_Heading","color","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","react_default","a","createElement","as","getTimezoneOffsetInMilliseconds","isDate","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","DEFAULT_ADDITIONAL_DIGITS","parseTokenDateTimeDelimeter","parseTokenPlainTime","parseTokenYY","parseTokensYYY","parseTokenYYYY","parseTokensYYYYY","parseTokenMM","parseTokenDDD","parseTokenMMDD","parseTokenWww","parseTokenWwwD","parseTokenHH","parseTokenHHMM","parseTokenHHMMSS","parseTokenTimezone","parseTokenTimezoneZ","parseTokenTimezoneHH","parseTokenTimezoneHHMM","dayOfISOYear","isoYear","week","day","date","Date","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","module","exports","argument","dirtyOptions","getTime","additionalDigits","Number","dateStrings","dateString","timeString","array","split","test","token","exec","time","replace","timezone","splitDateString","parseYearResult","parseTokenYYY","parseTokenYYYYY","yearString","year","parseInt","restDateString","slice","centuryString","parseYear","month","dayOfYear","dayOfWeek","parseDate","offset","timestamp","hours","minutes","parseFloat","seconds","parseTime","timezoneString","absoluteOffset","parseTimezone","fullTime","fullTimeDate","fullTimeDateNextDay","setDate","getDate","offsetDiff","map","flatMap","getWithDefault","_curry_js__WEBPACK_IMPORTED_MODULE_0__","_caml_option_js__WEBPACK_IMPORTED_MODULE_1__","opt","f","undefined","mapU","flatMapU","$$default","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","value","err","_iterableToArrayLimit","TypeError","_nonIterableRest","startOfWeek","dirtyDate","weekStartsOn","getDayOfYear","getISOWeek","getISOYear","parse","isValid","enLocale","formatters","M","getMonth","MM","addLeadingZeros","Q","ceil","D","DD","DDD","DDDD","getDay","E","W","WW","YY","getFullYear","substr","YYYY","GG","String","GGGG","H","getHours","HH","h","hh","m","getMinutes","mm","s","getSeconds","ss","S","floor","getMilliseconds","SS","SSS","Z","formatTimezone","getTimezoneOffset","ZZ","X","x","delimeter","sign","absOffset","abs","number","targetLength","output","toString","dirtyFormatStr","formatStr","locale","localeFormatters","format","formattingTokensRegExp","formatter","input","match","Function","buildFormatFn","formatFn","startOfISOWeek","fourthOfJanuaryOfNextYear","setFullYear","setHours","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfYear","differenceInCalendarDays","baseTimezoneOffset","setSeconds","cleanDate","startOfDay","MILLISECONDS_IN_DAY","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","startOfISOYear","MILLISECONDS_IN_WEEK","fourthOfJanuary","isNaN","buildDistanceInWordsLocale","buildFormatLocale","distanceInWords","distanceInWordsLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","localize","count","options","result","addSuffix","comparison","buildFormattingTokensRegExp","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","MMM","MMMM","dd","ddd","dddd","A","aa","forEach","formatterToken","rem100","ordinal","commonFormatterKeys","formatterKeys","formattingTokens","concat","sort","reverse","RegExp","join"],"mappings":"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","file":"static/js/0.42b120ab.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport { breakpointStyle, genericStyles, normalizeColor } from '../../utils';\nimport { defaultProps } from '../../default-props';\n\nvar sizeStyle = function sizeStyle(props) {\n  // size is a combination of the level and size properties\n  var size = props.size || 'medium';\n  var headingTheme = props.theme.heading;\n  var levelStyle = headingTheme.level[props.level];\n\n  if (levelStyle) {\n    var data = levelStyle[size];\n    var styles = [css([\"font-size:\", \";line-height:\", \";max-width:\", \";font-weight:\", \";\"], data.size, data.height, data.maxWidth, levelStyle.font.weight || headingTheme.weight)];\n\n    if (props.responsive && headingTheme.responsiveBreakpoint) {\n      var breakpoint = props.theme.global.breakpoints[headingTheme.responsiveBreakpoint];\n\n      if (breakpoint) {\n        var responsiveData = headingTheme.level[Math.min(props.level + 1, 4)][size];\n        styles.push(breakpointStyle(breakpoint, \"\\n          font-size: \" + responsiveData.size + \";\\n          line-height: \" + responsiveData.height + \";\\n          max-width: \" + responsiveData.maxWidth + \";\\n        \"));\n      }\n    }\n\n    return styles;\n  }\n\n  console.warn(\"Heading level \" + props.level + \" is not defined in your theme.\");\n  return '';\n};\n\nvar fontFamily = function fontFamily(props) {\n  var font = props.theme.heading.level[props.level].font;\n\n  if (font && font.family) {\n    return css([\"font-family:\", \";\"], font.family);\n  }\n\n  return props.theme.heading.font ? css([\"font-family:\", \";\"], props.theme.heading.font.family) : '';\n};\n\nvar TEXT_ALIGN_MAP = {\n  center: 'center',\n  end: 'right',\n  start: 'left'\n};\nvar textAlignStyle = css([\"text-align:\", \";\"], function (props) {\n  return TEXT_ALIGN_MAP[props.textAlign];\n});\nvar truncateStyle = \"\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n\";\nvar colorStyle = css([\"color:\", \";\"], function (props) {\n  return normalizeColor(props.colorProp, props.theme);\n});\nvar StyledHeading = styled.h1.withConfig({\n  displayName: \"StyledHeading\",\n  componentId: \"sc-1rdh4aw-0\"\n})([\"\", \" \", \" \", \" \", \" \", \" \", \" \", \"\"], genericStyles, function (props) {\n  return fontFamily(props);\n}, function (props) {\n  return sizeStyle(props);\n}, function (props) {\n  return props.textAlign && textAlignStyle;\n}, function (props) {\n  return props.truncate && truncateStyle;\n}, function (props) {\n  return props.colorProp && colorStyle;\n}, function (props) {\n  return props.theme.heading && props.theme.heading.extend;\n});\nStyledHeading.defaultProps = {};\nObject.setPrototypeOf(StyledHeading.defaultProps, defaultProps);\nexport { StyledHeading };","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { StyledHeading } from './StyledHeading';\n\nvar Heading = function Heading(props) {\n  var color = props.color,\n      level = props.level,\n      rest = _objectWithoutPropertiesLoose(props, [\"color\", \"level\"]); // enforce level to be a number\n\n\n  return React.createElement(StyledHeading, _extends({\n    as: \"h\" + level,\n    colorProp: color,\n    level: +level\n  }, rest));\n};\n\nHeading.defaultProps = {\n  level: 1,\n  responsive: true\n};\nvar HeadingDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  HeadingDoc = require('./doc').doc(Heading); // eslint-disable-line global-require\n}\n\nvar HeadingWrapper = HeadingDoc || Heading;\nexport { HeadingWrapper as Heading };","var getTimezoneOffsetInMilliseconds = require('../_lib/getTimezoneOffsetInMilliseconds/index.js');\n\nvar isDate = require('../is_date/index.js');\n\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar parseTokenDateTimeDelimeter = /[T ]/;\nvar parseTokenPlainTime = /:/; // year tokens\n\nvar parseTokenYY = /^(\\d{2})$/;\nvar parseTokensYYY = [/^([+-]\\d{2})$/, // 0 additional digits\n/^([+-]\\d{3})$/, // 1 additional digit\n/^([+-]\\d{4})$/ // 2 additional digits\n];\nvar parseTokenYYYY = /^(\\d{4})/;\nvar parseTokensYYYYY = [/^([+-]\\d{4})/, // 0 additional digits\n/^([+-]\\d{5})/, // 1 additional digit\n/^([+-]\\d{6})/ // 2 additional digits\n]; // date tokens\n\nvar parseTokenMM = /^-(\\d{2})$/;\nvar parseTokenDDD = /^-?(\\d{3})$/;\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/;\nvar parseTokenWww = /^-?W(\\d{2})$/;\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/; // time tokens\n\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/;\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/;\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/; // timezone tokens\n\nvar parseTokenTimezone = /([Z+-].*)$/;\nvar parseTokenTimezoneZ = /^(Z)$/;\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/;\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/;\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nfunction parse(argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument !== 'string') {\n    return new Date(argument);\n  }\n\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits;\n\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS;\n  } else {\n    additionalDigits = Number(additionalDigits);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n  var year = parseYearResult.year;\n  var restDateString = parseYearResult.restDateString;\n  var date = parseDate(restDateString, year);\n\n  if (date) {\n    var timestamp = date.getTime();\n    var time = 0;\n    var offset;\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time);\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone) * MILLISECONDS_IN_MINUTE;\n    } else {\n      var fullTime = timestamp + time;\n      var fullTimeDate = new Date(fullTime);\n      offset = getTimezoneOffsetInMilliseconds(fullTimeDate); // Adjust time when it's coming from DST\n\n      var fullTimeDateNextDay = new Date(fullTime);\n      fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1);\n      var offsetDiff = getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) - getTimezoneOffsetInMilliseconds(fullTimeDate);\n\n      if (offsetDiff > 0) {\n        offset += offsetDiff;\n      }\n    }\n\n    return new Date(timestamp + time + offset);\n  } else {\n    return new Date(argument);\n  }\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(parseTokenDateTimeDelimeter);\n  var timeString;\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits];\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits];\n  var token; // YYYY or ±YYYYY\n\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString);\n\n  if (token) {\n    var yearString = token[1];\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    };\n  } // YY or ±YYY\n\n\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString);\n\n  if (token) {\n    var centuryString = token[1];\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    };\n  } // Invalid ISO-formatted year\n\n\n  return {\n    year: null\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null;\n  }\n\n  var token;\n  var date;\n  var month;\n  var week; // YYYY\n\n  if (dateString.length === 0) {\n    date = new Date(0);\n    date.setUTCFullYear(year);\n    return date;\n  } // YYYY-MM\n\n\n  token = parseTokenMM.exec(dateString);\n\n  if (token) {\n    date = new Date(0);\n    month = parseInt(token[1], 10) - 1;\n    date.setUTCFullYear(year, month);\n    return date;\n  } // YYYY-DDD or YYYYDDD\n\n\n  token = parseTokenDDD.exec(dateString);\n\n  if (token) {\n    date = new Date(0);\n    var dayOfYear = parseInt(token[1], 10);\n    date.setUTCFullYear(year, 0, dayOfYear);\n    return date;\n  } // YYYY-MM-DD or YYYYMMDD\n\n\n  token = parseTokenMMDD.exec(dateString);\n\n  if (token) {\n    date = new Date(0);\n    month = parseInt(token[1], 10) - 1;\n    var day = parseInt(token[2], 10);\n    date.setUTCFullYear(year, month, day);\n    return date;\n  } // YYYY-Www or YYYYWww\n\n\n  token = parseTokenWww.exec(dateString);\n\n  if (token) {\n    week = parseInt(token[1], 10) - 1;\n    return dayOfISOYear(year, week);\n  } // YYYY-Www-D or YYYYWwwD\n\n\n  token = parseTokenWwwD.exec(dateString);\n\n  if (token) {\n    week = parseInt(token[1], 10) - 1;\n    var dayOfWeek = parseInt(token[2], 10) - 1;\n    return dayOfISOYear(year, week, dayOfWeek);\n  } // Invalid ISO-formatted date\n\n\n  return null;\n}\n\nfunction parseTime(timeString) {\n  var token;\n  var hours;\n  var minutes; // hh\n\n  token = parseTokenHH.exec(timeString);\n\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'));\n    return hours % 24 * MILLISECONDS_IN_HOUR;\n  } // hh:mm or hhmm\n\n\n  token = parseTokenHHMM.exec(timeString);\n\n  if (token) {\n    hours = parseInt(token[1], 10);\n    minutes = parseFloat(token[2].replace(',', '.'));\n    return hours % 24 * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE;\n  } // hh:mm:ss or hhmmss\n\n\n  token = parseTokenHHMMSS.exec(timeString);\n\n  if (token) {\n    hours = parseInt(token[1], 10);\n    minutes = parseInt(token[2], 10);\n    var seconds = parseFloat(token[3].replace(',', '.'));\n    return hours % 24 * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n  } // Invalid ISO-formatted time\n\n\n  return null;\n}\n\nfunction parseTimezone(timezoneString) {\n  var token;\n  var absoluteOffset; // Z\n\n  token = parseTokenTimezoneZ.exec(timezoneString);\n\n  if (token) {\n    return 0;\n  } // ±hh\n\n\n  token = parseTokenTimezoneHH.exec(timezoneString);\n\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60;\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset;\n  } // ±hh:mm or ±hhmm\n\n\n  token = parseTokenTimezoneHHMM.exec(timezoneString);\n\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10);\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset;\n  }\n\n  return 0;\n}\n\nfunction dayOfISOYear(isoYear, week, day) {\n  week = week || 0;\n  day = day || 0;\n  var date = new Date(0);\n  date.setUTCFullYear(isoYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\nmodule.exports = parse;","import * as Curry from \"./curry.js\";\nimport * as Caml_option from \"./caml_option.js\";\n\nfunction getExn(param) {\n  if (param !== undefined) {\n    return Caml_option.valFromOption(param);\n  } else {\n    throw new Error(\"getExn\");\n  }\n}\n\nfunction mapWithDefaultU(opt, $$default, f) {\n  if (opt !== undefined) {\n    return f(Caml_option.valFromOption(opt));\n  } else {\n    return $$default;\n  }\n}\n\nfunction mapWithDefault(opt, $$default, f) {\n  return mapWithDefaultU(opt, $$default, Curry.__1(f));\n}\n\nfunction mapU(opt, f) {\n  if (opt !== undefined) {\n    return Caml_option.some(f(Caml_option.valFromOption(opt)));\n  }\n}\n\nfunction map(opt, f) {\n  return mapU(opt, Curry.__1(f));\n}\n\nfunction flatMapU(opt, f) {\n  if (opt !== undefined) {\n    return f(Caml_option.valFromOption(opt));\n  }\n}\n\nfunction flatMap(opt, f) {\n  return flatMapU(opt, Curry.__1(f));\n}\n\nfunction getWithDefault(opt, $$default) {\n  if (opt !== undefined) {\n    return Caml_option.valFromOption(opt);\n  } else {\n    return $$default;\n  }\n}\n\nfunction isSome(param) {\n  return param !== undefined;\n}\n\nfunction isNone(x) {\n  return x === undefined;\n}\n\nfunction eqU(a, b, f) {\n  if (a !== undefined) {\n    if (b !== undefined) {\n      return f(Caml_option.valFromOption(a), Caml_option.valFromOption(b));\n    } else {\n      return false;\n    }\n  } else {\n    return b === undefined;\n  }\n}\n\nfunction eq(a, b, f) {\n  return eqU(a, b, Curry.__2(f));\n}\n\nfunction cmpU(a, b, f) {\n  if (a !== undefined) {\n    if (b !== undefined) {\n      return f(Caml_option.valFromOption(a), Caml_option.valFromOption(b));\n    } else {\n      return 1;\n    }\n  } else if (b !== undefined) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction cmp(a, b, f) {\n  return cmpU(a, b, Curry.__2(f));\n}\n\nexport { getExn, mapWithDefaultU, mapWithDefault, mapU, map, flatMapU, flatMap, getWithDefault, isSome, isNone, eqU, eq, cmpU, cmp };\n/* No side effect */","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","var startOfWeek = require('../start_of_week/index.js');\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\n\nfunction startOfISOWeek(dirtyDate) {\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}\n\nmodule.exports = startOfISOWeek;","var getDayOfYear = require('../get_day_of_year/index.js');\n\nvar getISOWeek = require('../get_iso_week/index.js');\n\nvar getISOYear = require('../get_iso_year/index.js');\n\nvar parse = require('../parse/index.js');\n\nvar isValid = require('../is_valid/index.js');\n\nvar enLocale = require('../locale/en/index.js');\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\n\n\nfunction format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ';\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFormatters = enLocale.format.formatters;\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp;\n\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters;\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp;\n    }\n  }\n\n  var date = parse(dirtyDate);\n\n  if (!isValid(date)) {\n    return 'Invalid Date';\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp);\n  return formatFn(date);\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function M(date) {\n    return date.getMonth() + 1;\n  },\n  // Month: 01, 02, ..., 12\n  'MM': function MM(date) {\n    return addLeadingZeros(date.getMonth() + 1, 2);\n  },\n  // Quarter: 1, 2, 3, 4\n  'Q': function Q(date) {\n    return Math.ceil((date.getMonth() + 1) / 3);\n  },\n  // Day of month: 1, 2, ..., 31\n  'D': function D(date) {\n    return date.getDate();\n  },\n  // Day of month: 01, 02, ..., 31\n  'DD': function DD(date) {\n    return addLeadingZeros(date.getDate(), 2);\n  },\n  // Day of year: 1, 2, ..., 366\n  'DDD': function DDD(date) {\n    return getDayOfYear(date);\n  },\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function DDDD(date) {\n    return addLeadingZeros(getDayOfYear(date), 3);\n  },\n  // Day of week: 0, 1, ..., 6\n  'd': function d(date) {\n    return date.getDay();\n  },\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function E(date) {\n    return date.getDay() || 7;\n  },\n  // ISO week: 1, 2, ..., 53\n  'W': function W(date) {\n    return getISOWeek(date);\n  },\n  // ISO week: 01, 02, ..., 53\n  'WW': function WW(date) {\n    return addLeadingZeros(getISOWeek(date), 2);\n  },\n  // Year: 00, 01, ..., 99\n  'YY': function YY(date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2);\n  },\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function YYYY(date) {\n    return addLeadingZeros(date.getFullYear(), 4);\n  },\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function GG(date) {\n    return String(getISOYear(date)).substr(2);\n  },\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function GGGG(date) {\n    return getISOYear(date);\n  },\n  // Hour: 0, 1, ... 23\n  'H': function H(date) {\n    return date.getHours();\n  },\n  // Hour: 00, 01, ..., 23\n  'HH': function HH(date) {\n    return addLeadingZeros(date.getHours(), 2);\n  },\n  // Hour: 1, 2, ..., 12\n  'h': function h(date) {\n    var hours = date.getHours();\n\n    if (hours === 0) {\n      return 12;\n    } else if (hours > 12) {\n      return hours % 12;\n    } else {\n      return hours;\n    }\n  },\n  // Hour: 01, 02, ..., 12\n  'hh': function hh(date) {\n    return addLeadingZeros(formatters['h'](date), 2);\n  },\n  // Minute: 0, 1, ..., 59\n  'm': function m(date) {\n    return date.getMinutes();\n  },\n  // Minute: 00, 01, ..., 59\n  'mm': function mm(date) {\n    return addLeadingZeros(date.getMinutes(), 2);\n  },\n  // Second: 0, 1, ..., 59\n  's': function s(date) {\n    return date.getSeconds();\n  },\n  // Second: 00, 01, ..., 59\n  'ss': function ss(date) {\n    return addLeadingZeros(date.getSeconds(), 2);\n  },\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function S(date) {\n    return Math.floor(date.getMilliseconds() / 100);\n  },\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function SS(date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2);\n  },\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function SSS(date) {\n    return addLeadingZeros(date.getMilliseconds(), 3);\n  },\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function Z(date) {\n    return formatTimezone(date.getTimezoneOffset(), ':');\n  },\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function ZZ(date) {\n    return formatTimezone(date.getTimezoneOffset());\n  },\n  // Seconds timestamp: 512969520\n  'X': function X(date) {\n    return Math.floor(date.getTime() / 1000);\n  },\n  // Milliseconds timestamp: 512969520900\n  'x': function x(date) {\n    return date.getTime();\n  }\n};\n\nfunction buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp);\n  var length = array.length;\n  var i;\n  var formatter;\n\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]];\n\n    if (formatter) {\n      array[i] = formatter;\n    } else {\n      array[i] = removeFormattingTokens(array[i]);\n    }\n  }\n\n  return function (date) {\n    var output = '';\n\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters);\n      } else {\n        output += array[i];\n      }\n    }\n\n    return output;\n  };\n}\n\nfunction removeFormattingTokens(input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '');\n  }\n\n  return input.replace(/\\\\/g, '');\n}\n\nfunction formatTimezone(offset, delimeter) {\n  delimeter = delimeter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2);\n}\n\nfunction addLeadingZeros(number, targetLength) {\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return output;\n}\n\nmodule.exports = format;","/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate(argument) {\n  return argument instanceof Date;\n}\n\nmodule.exports = isDate;","var parse = require('../parse/index.js');\n\nvar startOfISOWeek = require('../start_of_iso_week/index.js');\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\n\n\nfunction getISOYear(dirtyDate) {\n  var date = parse(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\nmodule.exports = getISOYear;","var parse = require('../parse/index.js');\n\nvar startOfYear = require('../start_of_year/index.js');\n\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js');\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\n\nfunction getDayOfYear(dirtyDate) {\n  var date = parse(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\nmodule.exports = getDayOfYear;","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nmodule.exports = function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = date.getTimezoneOffset();\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n};","var parse = require('../parse/index.js');\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\n\nfunction startOfYear(dirtyDate) {\n  var cleanDate = parse(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nmodule.exports = startOfYear;","var startOfDay = require('../start_of_day/index.js');\n\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\n\nfunction differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE;\n  var timestampRight = startOfDayRight.getTime() - startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE; // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\n\nmodule.exports = differenceInCalendarDays;","var parse = require('../parse/index.js');\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\n\nfunction startOfDay(dirtyDate) {\n  var date = parse(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nmodule.exports = startOfDay;","var parse = require('../parse/index.js');\n\nvar startOfISOWeek = require('../start_of_iso_week/index.js');\n\nvar startOfISOYear = require('../start_of_iso_year/index.js');\n\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nfunction getISOWeek(dirtyDate) {\n  var date = parse(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}\n\nmodule.exports = getISOWeek;","var parse = require('../parse/index.js');\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\n\n\nfunction startOfWeek(dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? Number(dirtyOptions.weekStartsOn) || 0 : 0;\n  var date = parse(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nmodule.exports = startOfWeek;","var getISOYear = require('../get_iso_year/index.js');\n\nvar startOfISOWeek = require('../start_of_iso_week/index.js');\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\n\n\nfunction startOfISOYear(dirtyDate) {\n  var year = getISOYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}\n\nmodule.exports = startOfISOYear;","var isDate = require('../is_date/index.js');\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\n\nfunction isValid(dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate);\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date');\n  }\n}\n\nmodule.exports = isValid;","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js');\n\nvar buildFormatLocale = require('./build_format_locale/index.js');\n/**\n * @category Locales\n * @summary English locale.\n */\n\n\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n};","function buildDistanceInWordsLocale() {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n    halfAMinute: 'half a minute',\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  };\n\n  function localize(token, count, options) {\n    options = options || {};\n    var result;\n\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token];\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one;\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count);\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result;\n      } else {\n        return result + ' ago';\n      }\n    }\n\n    return result;\n  }\n\n  return {\n    localize: localize\n  };\n}\n\nmodule.exports = buildDistanceInWordsLocale;","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js');\n\nfunction buildFormatLocale() {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var meridiemUppercase = ['AM', 'PM'];\n  var meridiemLowercase = ['am', 'pm'];\n  var meridiemFull = ['a.m.', 'p.m.'];\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function MMM(date) {\n      return months3char[date.getMonth()];\n    },\n    // Month: January, February, ..., December\n    'MMMM': function MMMM(date) {\n      return monthsFull[date.getMonth()];\n    },\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function dd(date) {\n      return weekdays2char[date.getDay()];\n    },\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function ddd(date) {\n      return weekdays3char[date.getDay()];\n    },\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function dddd(date) {\n      return weekdaysFull[date.getDay()];\n    },\n    // AM, PM\n    'A': function A(date) {\n      return date.getHours() / 12 >= 1 ? meridiemUppercase[1] : meridiemUppercase[0];\n    },\n    // am, pm\n    'a': function a(date) {\n      return date.getHours() / 12 >= 1 ? meridiemLowercase[1] : meridiemLowercase[0];\n    },\n    // a.m., p.m.\n    'aa': function aa(date) {\n      return date.getHours() / 12 >= 1 ? meridiemFull[1] : meridiemFull[0];\n    } // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n\n  };\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W'];\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date));\n    };\n  });\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  };\n}\n\nfunction ordinal(number) {\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nmodule.exports = buildFormatLocale;","var commonFormatterKeys = ['M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd', 'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG', 'H', 'HH', 'h', 'hh', 'm', 'mm', 's', 'ss', 'S', 'SS', 'SSS', 'Z', 'ZZ', 'X', 'x'];\n\nfunction buildFormattingTokensRegExp(formatters) {\n  var formatterKeys = [];\n\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key);\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys.concat(formatterKeys).sort().reverse();\n  var formattingTokensRegExp = new RegExp('(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g');\n  return formattingTokensRegExp;\n}\n\nmodule.exports = buildFormattingTokensRegExp;"],"sourceRoot":""}